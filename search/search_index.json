{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#cc-linting-package","title":"C/C++ Linting Package","text":"<p>A package for linting C/C++ code with clang-tidy and/or clang-format to collect feedback provided in the form of</p> <ul> <li> thread-comments</li> <li> step-summary</li> <li> file-annotations</li> <li> Pull Request Review suggestions</li> </ul> <p>Warning</p> <p>This project is still experimental and subject to drastic changes. Please use the pure python cpp-linter package until this project is ready for deployment.</p>"},{"location":"#install","title":"Install","text":"<p>This package is available in several programming languages (through their respective package managers).</p>"},{"location":"#rust","title":"Rust","text":"<p>Install from source code hosted at crates.io:</p> <pre><code>cargo install cpp-linter\n</code></pre> <p>Install a pre-compiled binary from GitHub releases:</p> <p>First install <code>cargo-binstall</code>.</p> <pre><code>cargo binstall cpp-linter\n</code></pre>"},{"location":"#python","title":"Python","text":"<p>Install the python package:</p> <pre><code>pip install cpp-linter\n</code></pre> <p></p> <p>Pre-releases are uploaded to test-pypi:</p> <pre><code>pip install -i https://test.pypi.org/simple/ cpp-linter\n</code></pre>"},{"location":"#nodejs","title":"Node.js","text":"<p>Install the Node.js binding:</p> <pre><code>npm -g install @cpp-linter/cpp-linter\n</code></pre>"},{"location":"#usage","title":"Usage","text":"<p>For usage in a CI workflow, see the cpp-linter/cpp-linter-action repository.</p> <p>For the description of supported Command Line Interface options, see the CLI documentation.</p>"},{"location":"#example","title":"Example","text":""},{"location":"#annotations","title":"Annotations","text":"<p>Using <code>--file-annotations</code>:</p>"},{"location":"#clang-format-annotations","title":"clang-format annotations","text":""},{"location":"#clang-tidy-annotations","title":"clang-tidy annotations","text":""},{"location":"#thread-comment","title":"Thread Comment","text":"<p>Using <code>--thread-comments</code>:</p> <p></p>"},{"location":"#step-summary","title":"Step Summary","text":"<p>Using <code>--step-summary</code>:</p> <p></p>"},{"location":"#pull-request-review","title":"Pull Request Review","text":""},{"location":"#only-clang-tidy","title":"Only clang-tidy","text":"<p>Using <code>--tidy-review</code>:</p> <p></p>"},{"location":"#only-clang-format","title":"Only clang-format","text":"<p>Using <code>--format-review</code>:</p> <p></p> <p></p>"},{"location":"#have-question-or-feedback","title":"Have question or feedback?","text":"<p>To provide feedback (requesting a feature or reporting a bug) please post to issues.</p>"},{"location":"#license","title":"License","text":"<p>The scripts and documentation in this project are released under the MIT license.</p> <p>As for dependencies (that are redistributed by us in binary form) and their licenses, refer to THIRD-PARTY LICENSES.</p>"},{"location":"changelog/","title":"Changes","text":""},{"location":"changelog/#changelog","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.</p>"},{"location":"changelog/#200-rc12-2024-12-12","title":"2.0.0-rc12 - 2024-12-12","text":""},{"location":"changelog/#added","title":"\ud83d\ude80 Added","text":"<ul> <li>Rationale to diagnostic comments in PR reviews by @2bndy5 in <code>0923c6a</code></li> </ul>"},{"location":"changelog/#documentation","title":"\ud83d\udcdd Documentation","text":"<ul> <li>[rust API] update logo, favicon, and some links by @2bndy5 in <code>31b7add</code></li> </ul> <p>Full commit diff: <code>v2.0.0-rc11...v2.0.0-rc12</code></p>"},{"location":"changelog/#200-rc11-2024-12-11","title":"2.0.0-rc11 - 2024-12-11","text":""},{"location":"changelog/#fixed","title":"\ud83d\udee0\ufe0f Fixed","text":"<ul> <li>Fix changelog on auto-version bump by @2bndy5 in <code>ec4e6d4</code></li> </ul>"},{"location":"changelog/#dependency-updates","title":"\ud83d\udce6 Dependency updates","text":"<ul> <li>Bump pypa/gh-action-pypi-publish in the actions group by @dependabot[bot] in #81</li> <li>Bump the npm group with 3 updates by @dependabot[bot] in #78</li> <li>Bump the cargo group across 1 directory with 7 updates by @dependabot[bot] in #82</li> </ul>"},{"location":"changelog/#changed","title":"\ud83d\udde8\ufe0f Changed","text":"<ul> <li>Bump version to v2.0.0-rc11 by @2bndy5 in <code>d73c4f6</code></li> </ul> <p>Full commit diff: <code>v2.0.0-rc10...v2.0.0-rc11</code></p>"},{"location":"changelog/#200-rc10-2024-12-11","title":"2.0.0-rc10 - 2024-12-11","text":""},{"location":"changelog/#added_1","title":"\ud83d\ude80 Added","text":"<ul> <li>Prefix review comments with marker by @2bndy5 in <code>9d2a9a3</code></li> </ul>"},{"location":"changelog/#dependency-updates_1","title":"\ud83d\udce6 Dependency updates","text":"<ul> <li>Bump pyo3 from 0.23.2 to 0.23.3 by @dependabot[bot] in #79</li> </ul>"},{"location":"changelog/#changed_1","title":"\ud83d\udde8\ufe0f Changed","text":"<ul> <li>Bump version to v2.0.0-rc10 by @2bndy5 in <code>3915e2b</code></li> </ul> <p>Full commit diff: <code>v2.0.0-rc9...v2.0.0-rc10</code></p>"},{"location":"changelog/#200-rc9-2024-11-27","title":"2.0.0-rc9 - 2024-11-27","text":""},{"location":"changelog/#fixed_1","title":"\ud83d\udee0\ufe0f Fixed","text":"<ul> <li>Clang-tidy diagnostic comments in PR review by @2bndy5 in #77</li> </ul>"},{"location":"changelog/#dependency-updates_2","title":"\ud83d\udce6 Dependency updates","text":"<ul> <li>Bump pyo3 from 0.23.1 to 0.23.2 in the cargo group by @dependabot[bot] in #76</li> </ul>"},{"location":"changelog/#changed_2","title":"\ud83d\udde8\ufe0f Changed","text":"<ul> <li>Bump version to v2.0.0-rc9 by @2bndy5 in <code>9ccbc14</code></li> </ul> <p>Full commit diff: <code>v2.0.0-rc8...v2.0.0-rc9</code></p>"},{"location":"changelog/#200-rc8-2024-11-24","title":"2.0.0-rc8 - 2024-11-24","text":""},{"location":"changelog/#fixed_2","title":"\ud83d\udee0\ufe0f Fixed","text":"<ul> <li>Include type stubs in python source distribution by @2bndy5 in <code>7dfcce7</code></li> <li>Clang tools' version output string in PR review summary by @2bndy5 in <code>3333796</code></li> </ul>"},{"location":"changelog/#documentation_1","title":"\ud83d\udcdd Documentation","text":"<ul> <li>Minor update node binding README by @2bndy5 in <code>fc2244f</code></li> </ul>"},{"location":"changelog/#changed_3","title":"\ud83d\udde8\ufe0f Changed","text":"<ul> <li>Bump version to v2.0.0-rc8 by @2bndy5 in <code>205bd2d</code></li> </ul> <p>Full commit diff: <code>v2.0.0-rc7...v2.0.0-rc8</code></p>"},{"location":"changelog/#200-rc7-2024-11-24","title":"2.0.0-rc7 - 2024-11-24","text":""},{"location":"changelog/#fixed_3","title":"\ud83d\udee0\ufe0f Fixed","text":"<ul> <li>Fix python binding's entry point by @2bndy5 in <code>bba2e68</code></li> </ul>"},{"location":"changelog/#changed_4","title":"\ud83d\udde8\ufe0f Changed","text":"<ul> <li>Bump version to v2.0.0-rc7 by @2bndy5 in <code>a2001f3</code></li> </ul> <p>Full commit diff: <code>v2.0.0-rc6...v2.0.0-rc7</code></p>"},{"location":"changelog/#200-rc6-2024-11-23","title":"2.0.0-rc6 - 2024-11-23","text":""},{"location":"changelog/#added_2","title":"\ud83d\ude80 Added","text":"<ul> <li>Add optional colored log output by @2bndy5 in #52</li> <li>Add CI to detect performance regressions by @2bndy5 in #53</li> <li>Capture and output clang tool's version number by @2bndy5 in #54</li> </ul>"},{"location":"changelog/#fixed_4","title":"\ud83d\udee0\ufe0f Fixed","text":"<ul> <li>Fix changelog updates when publishing release by @2bndy5 in <code>275f189</code></li> <li>Let public forks' PRs run git cliff in CI by @2bndy5 in <code>0857121</code></li> <li>Regenerate TS type definitions by @2bndy5 in <code>023c170</code></li> </ul>"},{"location":"changelog/#dependency-updates_3","title":"\ud83d\udce6 Dependency updates","text":"<ul> <li>Bump reqwest from 0.12.7 to 0.12.8 in the cargo group by @dependabot[bot] in #51</li> <li>Bump the cargo group across 1 directory with 4 updates by @dependabot[bot] in #58</li> <li>Bump @eslint/plugin-kit from 0.2.0 to 0.2.3 by @dependabot[bot] in #69</li> <li>Bump cross-spawn from 7.0.3 to 7.0.5 by @dependabot[bot] in #70</li> <li>Bump the actions group across 1 directory with 2 updates by @dependabot[bot] in #72</li> <li>Bump the npm group across 1 directory with 4 updates by @dependabot[bot] in #71</li> <li>Bump the cargo group across 1 directory with 13 updates by @dependabot[bot] in #73</li> </ul>"},{"location":"changelog/#documentation_2","title":"\ud83d\udcdd Documentation","text":"<ul> <li>Switch to mkdocs by @2bndy5 in <code>da09e54</code></li> <li>Adjust color in docs' drawer by @2bndy5 in <code>6239f7e</code></li> </ul>"},{"location":"changelog/#changed_5","title":"\ud83d\udde8\ufe0f Changed","text":"<ul> <li>Reorganize repo folders by @2bndy5 in <code>d30125b</code></li> <li>Bump version to v2.0.0-rc6 by @2bndy5 in <code>12729b8</code></li> </ul> <p>Full commit diff: <code>v2.0.0-rc5...v2.0.0-rc6</code></p>"},{"location":"changelog/#200-rc5-2024-09-29","title":"2.0.0-rc5 - 2024-09-29","text":""},{"location":"changelog/#added_3","title":"\ud83d\ude80 Added","text":"<ul> <li>Add changelog and automate version bump and release workflows by @2bndy5 in #42</li> </ul>"},{"location":"changelog/#fixed_5","title":"\ud83d\udee0\ufe0f Fixed","text":"<ul> <li>Fix typo in node-binding/README by @2bndy5 in <code>7732676</code></li> <li>Propagate errors by @2bndy5 in #47</li> <li>Fix bump-n-release CI workflow by @2bndy5 in <code>cc3ced6</code></li> </ul>"},{"location":"changelog/#dependency-updates_4","title":"\ud83d\udce6 Dependency updates","text":"<ul> <li>Bump the npm group with 2 updates by @dependabot[bot] in #43</li> </ul>"},{"location":"changelog/#documentation_3","title":"\ud83d\udcdd Documentation","text":"<ul> <li>Release trial follow up by @2bndy5 in #41</li> <li>Move logic for release notes generation from Python script to Jinja template (release CI) by @2bndy5 in #44</li> <li>Add ReadTheDocs config by @2bndy5 in #45</li> </ul>"},{"location":"changelog/#changed_6","title":"\ud83d\udde8\ufe0f Changed","text":"<ul> <li>Gimme them badges by @2bndy5 in <code>c0f1ea5</code></li> <li>Rename repository by @2bndy5 in <code>5e3d93f</code></li> <li>Bump version to v2.0.0-rc5 by @2bndy5 in <code>12ecf9f</code></li> </ul> <p>Full commit diff: <code>v2.0.0-rc4...v2.0.0-rc5</code></p>"},{"location":"changelog/#200-rc4-2024-09-21","title":"2.0.0-rc4 - 2024-09-21","text":""},{"location":"changelog/#fixed_6","title":"\ud83d\udee0\ufe0f Fixed","text":"<ul> <li>Fix metadata in platform-specific node pkgs by @2bndy5 in <code>1dbb1de</code></li> </ul>"},{"location":"changelog/#changed_7","title":"\ud83d\udde8\ufe0f Changed","text":"<ul> <li>Bump version to v2.0.0-rc4 by @2bndy5 in <code>3e98e20</code></li> </ul> <p>Full commit diff: <code>v2.0.0-rc3...v2.0.0-rc4</code></p>"},{"location":"changelog/#200-rc3-2024-09-21","title":"2.0.0-rc3 - 2024-09-21","text":""},{"location":"changelog/#changed_8","title":"\ud83d\udde8\ufe0f Changed","text":"<ul> <li>[node] add life cycle script prepublishOnly by @2bndy5 in <code>55650ea</code></li> <li>Bump version to v2.0.0-rc3 by @2bndy5 in <code>070c5f7</code></li> </ul> <p>Full commit diff: <code>v2.0.0-rc2...v2.0.0-rc3</code></p>"},{"location":"changelog/#200-rc2-2024-09-21","title":"2.0.0-rc2 - 2024-09-21","text":""},{"location":"changelog/#added_4","title":"\ud83d\ude80 Added","text":"<ul> <li>Use napi-rs by @2bndy5 in #39</li> <li>Add <code>napi version</code> cmd to <code>just bump</code> script by @2bndy5 in <code>a6a8bf2</code></li> </ul>"},{"location":"changelog/#dependency-updates_5","title":"\ud83d\udce6 Dependency updates","text":"<ul> <li>Bump pypa/gh-action-pypi-publish in the actions group by @dependabot[bot] in #40</li> </ul>"},{"location":"changelog/#changed_9","title":"\ud83d\udde8\ufe0f Changed","text":"<ul> <li>Update READMEs by @2bndy5 in <code>3e9c128</code></li> <li>Some cleanup from release trials by @2bndy5 in <code>25c3951</code></li> <li>Bump version to v2.0.0-rc2 by @2bndy5 in <code>ebcb6c4</code></li> </ul> <p>Full commit diff: <code>v2.0.0-rc1...v2.0.0-rc2</code></p>"},{"location":"changelog/#200-rc1-2024-09-19","title":"2.0.0-rc1 - 2024-09-19","text":""},{"location":"changelog/#added_5","title":"\ud83d\ude80 Added","text":"<ul> <li>Add more testing and various improvements by @2bndy5 in #4</li> <li>Support file paths in CLI positional argument by @2bndy5 in #16</li> <li>Support glob patterns by @2bndy5 in #25</li> <li>Resort to paginated requests for changed files by @2bndy5 in #37</li> </ul>"},{"location":"changelog/#fixed_7","title":"\ud83d\udee0\ufe0f Fixed","text":"<ul> <li>Fix parsing of <code>--extra-arg</code> by @2bndy5 in <code>03f3de5</code></li> <li>Fix CI docs workflow by @2bndy5 in <code>ae33a6d</code></li> <li>Fix GithubApiClient init for non-PR events by @2bndy5 in <code>5b60ab8</code></li> <li>Fix typo in README by @2bndy5 in <code>afa1312</code></li> <li>Fix dependabot config by @2bndy5 in <code>3957be2</code></li> <li>Fix links to clang-analyzer diagnostic's help site by @2bndy5 in #36</li> <li>Fix CI workflows for publishing releases by @2bndy5 in <code>4f9b912</code></li> <li>Fix release CI by @2bndy5 in <code>49b3487</code></li> <li>Fix release CI steps by @2bndy5 in <code>23efee5</code></li> <li>Fix metadata and switch to pypa-publish action by @2bndy5 in <code>092e0c2</code></li> </ul>"},{"location":"changelog/#dependency-updates_6","title":"\ud83d\udce6 Dependency updates","text":"<ul> <li>Bump openssl from 0.10.62 to 0.10.66 by @dependabot[bot] in #6</li> <li>Bump the cargo group with 5 updates by @dependabot[bot] in #7</li> <li>Bump the cargo group with 3 updates by @dependabot[bot] in #15</li> <li>Bump serde_json from 1.0.125 to 1.0.127 in the cargo group by @dependabot[bot] in #19</li> <li>Bump serde from 1.0.208 to 1.0.209 in the cargo group by @dependabot[bot] in #23</li> <li>Bump tempfile from 3.9.0 to 3.12.0 in the cargo group by @dependabot[bot] in #26</li> <li>Bump the cargo group across 1 directory with 6 updates by @dependabot[bot] in #34</li> </ul>"},{"location":"changelog/#tests","title":"\ud83d\udea6 Tests","text":"<ul> <li>Refactor line filters; minor metadata updates by @2bndy5 in <code>19d5517</code></li> <li>Mock REST API calls in tests by @2bndy5 in #21</li> <li>PR review suggestions by @2bndy5 in <code>bd049d0</code></li> </ul>"},{"location":"changelog/#documentation_4","title":"\ud83d\udcdd Documentation","text":"<ul> <li>Switch to mdbook for docs by @2bndy5 in #13</li> <li>Begin documenting permissions by @2bndy5 in #22</li> </ul>"},{"location":"changelog/#changed_10","title":"\ud83d\udde8\ufe0f Changed","text":"<ul> <li>Init commit by @2bndy5 in <code>2e25fec</code></li> <li>Use separate crates for different entry points by @2bndy5 in #2</li> <li>Update README.md by @2bndy5 in <code>ff4a735</code></li> <li>Some updates from py codebase by @2bndy5 in #5</li> <li>Rename test CI; add badges to README by @2bndy5 in <code>b77058f</code></li> <li>Use task runner <code>just</code> (or VSCode \"tasks\") by @2bndy5 in #14</li> <li>Update README by @2bndy5 in <code>215485c</code></li> <li>Prepare for v2.0.0-rc1 by @2bndy5 in <code>9189e86</code></li> <li>Refactor files by @2bndy5 in #38</li> <li>Metadata changes by @2bndy5 in <code>f4237ae</code></li> </ul> <p>Full commit diff: <code>2e25fec...v2.0.0-rc1</code></p>"},{"location":"changelog/#new-contributors","title":"New Contributors","text":"<ul> <li>@2bndy5 made their first contribution</li> <li>@dependabot[bot] made their first contribution in #34</li> </ul>"},{"location":"cli/","title":"Command Line Interface","text":"<p>v1.x vs v2.x</p> <ul> <li>v1.x was written in pure python</li> <li>v2.x was written in rust (with python and node.js bindings)</li> </ul> <p>Version 2.x is intended to be backwards compatible, but a complete rewrite in rust prompted a major version bump.</p> <p>The minimum versions (badges) specified here hyperlink to different repositories. Anything established in v2.x will correspond to the rust project. Anything established in v1.4.6 or later (before v2.0.0) will correspond to the pure python project. Anything established before v1.4.6 will correspond to pure python sources in the cpp-linter-action project.</p> Usage<pre><code>cpp-linter [OPTIONS] [files]... [COMMAND]\n</code></pre>"},{"location":"cli/#commands","title":"Commands","text":""},{"location":"cli/#version","title":"<code>version</code>","text":"<p>Display the cpp-linter version and exit.</p>"},{"location":"cli/#help","title":"<code>help</code>","text":"<p>Print this message or the help of the given subcommand(s)</p>"},{"location":"cli/#arguments","title":"Arguments","text":""},{"location":"cli/#files","title":"<code>files</code>","text":"<p>An explicit path to a file. This can be specified zero or more times, resulting in a list of files. The list of files is appended to the internal list of 'not ignored' files. Further filtering can still be applied (see Source options).</p>"},{"location":"cli/#general-options","title":"General options","text":""},{"location":"cli/#-v-verbosity","title":"<code>-v, --verbosity</code>","text":"<p>1.3.0 Default<code>\"info\"</code></p> <p>This controls the action's verbosity in the workflow's logs. This option does not affect the verbosity of resulting thread comments or file annotations.</p>"},{"location":"cli/#-v-version","title":"<code>-V, --version</code>","text":"<p>1.4.6 Default<code>\"\"</code></p> <p>The desired version of the clang tools to use. Accepted options are strings which can be 8, 9, 10, 11, 12, 13, 14, 15, 16, 17.</p> <ul> <li>Set this option to a blank string (<code>''</code>) to use the   platform's default installed version.</li> <li>This value can also be a path to where the clang tools are   installed (if using a custom install location). All paths specified   here are converted to absolute.</li> </ul>"},{"location":"cli/#source-options","title":"Source options","text":""},{"location":"cli/#-e-extensions","title":"<code>-e, --extensions</code>","text":"<p>1.4.6 Default<code>\"c,h,C,H,cpp,hpp,cc,hh,c++,h++,cxx,hxx\"</code></p> <p>A comma-separated list of file extensions to analyze.</p>"},{"location":"cli/#-r-repo-root","title":"<code>-r, --repo-root</code>","text":"<p>1.4.6 Default<code>\".\"</code></p> <p>The relative path to the repository root directory. This path is relative to the runner's <code>GITHUB_WORKSPACE</code> environment variable (or the current working directory if not using a CI runner).</p>"},{"location":"cli/#-i-ignore","title":"<code>-i, --ignore</code>","text":"<p>1.3.0 Default<code>\".github|target\"</code></p> <p>Set this option with path(s) to ignore (or not ignore).</p> <ul> <li>In the case of multiple paths, you can use <code>|</code> to separate each path.</li> <li>There is no need to use <code>./</code> for each entry; a blank string (<code>''</code>)   represents the repo-root path.</li> <li>This can also have files, but the file's path (relative to   the <code>--repo-root</code>) has to be specified with the filename.</li> <li>Submodules are automatically ignored. Hidden directories (beginning   with a <code>.</code>) are also ignored automatically.</li> <li>Prefix a path with <code>!</code> to explicitly not ignore it. This can be   applied to a submodule's path (if desired) but not hidden directories.</li> <li>Glob patterns are supported here. Path separators in glob patterns should   use <code>/</code> because <code>\\</code> represents an escaped literal.</li> </ul>"},{"location":"cli/#-l-lines-changed-only","title":"<code>-l, --lines-changed-only</code>","text":"<p>1.5.0 <code>contents: read</code> Default<code>\"true\"</code></p> <p>This controls what part of the files are analyzed. The following values are accepted:</p> <ul> <li><code>false</code>: All lines in a file are analyzed.</li> <li><code>true</code>: Only lines in the diff that contain additions are analyzed.</li> <li><code>diff</code>: All lines in the diff are analyzed (including unchanged   lines but not subtractions).</li> </ul>"},{"location":"cli/#-f-files-changed-only","title":"<code>-f, --files-changed-only</code>","text":"<p>1.3.0 <code>contents: read</code> Default<code>\"false\"</code></p> <p>Set this option to false to analyze any source files in the repo. This is automatically enabled if <code>--lines-changed-only</code> is enabled.</p> <p>Note</p> <p>The <code>GITHUB_TOKEN</code> should be supplied when running on a private repository with this option enabled, otherwise the runner does not not have the privilege to list the changed files for an event.</p> <p>See Authenticating with the <code>GITHUB_TOKEN</code>.</p>"},{"location":"cli/#clang-format-options","title":"Clang-format options","text":""},{"location":"cli/#-s-style","title":"<code>-s, --style</code>","text":"<p>1.4.6 Default<code>\"llvm\"</code></p> <p>The style rules to use.</p> <ul> <li>Set this to <code>file</code> to have clang-format use the closest relative   .clang-format file.</li> <li>Set this to a blank string (<code>''</code>) to disable using clang-format   entirely.</li> </ul> <p>Note</p> <p>If this is not a blank string, then it is also passed to clang-tidy (if <code>--tidy_checks</code> is not <code>-*</code>). This is done to ensure suggestions from both clang-tidy and clang-format are consistent.</p>"},{"location":"cli/#-m-ignore-format","title":"<code>-M, --ignore-format</code>","text":"<p>1.9.0</p> <p>Similar to <code>--ignore</code> but applied exclusively to files analyzed by clang-format.</p>"},{"location":"cli/#clang-tidy-options","title":"Clang-tidy options","text":""},{"location":"cli/#-c-tidy-checks","title":"<code>-c, --tidy-checks</code>","text":"<p>1.4.6 Default<code>\"boost-*,bugprone-*,performance-*,readability-*,portability-*,modernize-*,clang-analyzer-*,cppcoreguidelines-*\"</code></p> <p>A comma-separated list of globs with optional <code>-</code> prefix. Globs are processed in order of appearance in the list. Globs without <code>-</code> prefix add checks with matching names to the set, globs with the <code>-</code> prefix remove checks with matching names from the set of enabled checks. This option's value is appended to the value of the 'Checks' option in a .clang-tidy file (if any).</p> <ul> <li>It is possible to disable clang-tidy entirely by setting this option to   <code>'-*'</code>.</li> <li>It is also possible to rely solely on a .clang-tidy config file by   specifying this option as a blank string (<code>''</code>).</li> </ul> <p>See also clang-tidy docs for more info.</p>"},{"location":"cli/#-p-database","title":"<code>-p, --database</code>","text":"<p>1.4.0</p> <p>The path that is used to read a compile command database. For example, it can be a CMake build directory in which a file named compile_commands.json exists (set <code>CMAKE_EXPORT_COMPILE_COMMANDS</code> to <code>ON</code>). When no build path is specified, a search for compile_commands.json will be attempted through all parent paths of the first input file. See LLVM docs about setup tooling for an example of setting up Clang Tooling on a source tree.</p>"},{"location":"cli/#-x-extra-arg","title":"<code>-x, --extra-arg</code>","text":"<p>A string of extra arguments passed to clang-tidy for use as compiler arguments. This can be specified more than once for each additional argument. Recommend using quotes around the value and avoid using spaces between name and value (use <code>=</code> instead):</p> <pre><code>cpp-linter --extra-arg=\"-std=c++17\" --extra-arg=\"-Wall\"\n</code></pre>"},{"location":"cli/#-d-ignore-tidy","title":"<code>-D, --ignore-tidy</code>","text":"<p>1.9.0</p> <p>Similar to <code>--ignore</code> but applied exclusively to files analyzed by clang-tidy.</p>"},{"location":"cli/#feedback-options","title":"Feedback options","text":""},{"location":"cli/#-g-thread-comments","title":"<code>-g, --thread-comments</code>","text":"<p>1.6.1 <code>contents: write</code> Default<code>\"false\"</code></p> <p>Set this option to true to enable the use of thread comments as feedback. Set this to <code>update</code> to update an existing comment if one exists; the value 'true' will always delete an old comment and post a new one if necessary.</p> <p>Note</p> <p>To use thread comments, the <code>GITHUB_TOKEN</code> (provided by Github to each repository) must be declared as an environment variable.</p> <p>See Authenticating with the <code>GITHUB_TOKEN</code>.</p>"},{"location":"cli/#-t-no-lgtm","title":"<code>-t, --no-lgtm</code>","text":"<p>1.6.1 Default<code>\"true\"</code></p> <p>Set this option to true or false to enable or disable the use of a thread comment that basically says 'Looks Good To Me' (when all checks pass).</p> <p>Important</p> <p>The <code>--thread-comments</code> option also notes further implications.</p>"},{"location":"cli/#-w-step-summary","title":"<code>-w, --step-summary</code>","text":"<p>1.6.0 Default<code>\"false\"</code></p> <p>Set this option to true or false to enable or disable the use of a workflow step summary when the run has concluded.</p>"},{"location":"cli/#-a-file-annotations","title":"<code>-a, --file-annotations</code>","text":"<p>1.4.3 Default<code>\"true\"</code></p> <p>Set this option to false to disable the use of file annotations as feedback.</p>"},{"location":"cli/#-d-tidy-review","title":"<code>-d, --tidy-review</code>","text":"<p>1.7.0 <code>pull-requests: write</code> experimental Default<code>\"false\"</code></p> <p>Set to <code>true</code> to enable Pull Request reviews from clang-tidy.</p>"},{"location":"cli/#-m-format-review","title":"<code>-m, --format-review</code>","text":"<p>1.7.0 <code>pull-requests: write</code> Default<code>\"false\"</code></p> <p>Set to <code>true</code> to enable Pull Request reviews from clang-format.</p>"},{"location":"cli/#-r-passive-reviews","title":"<code>-R, --passive-reviews</code>","text":"<p>1.10.0 <code>pull-requests: write</code> Default<code>\"false\"</code></p> <p>Set to <code>true</code> to prevent Pull Request reviews from approving or requesting changes.</p>"},{"location":"contributing/","title":"Contributing","text":""},{"location":"contributing/#contributing","title":"Contributing","text":"<p>This project requires the following tools installed:</p> <ul> <li> rust</li> <li> <code>uv</code> (Python Project management tool)</li> </ul>"},{"location":"contributing/#getting-started","title":"Getting started","text":"<p>After checking out the repo locally, use</p> <pre><code>uv sync\n</code></pre> <p>This creates a venv at \".venv/\" in repo root (if it doesn't exist). It also installs dev dependencies like <code>pre-commit</code>, <code>nox</code>, <code>ruff</code>, and <code>mypy</code>.</p> <p>See <code>uv sync</code> docs for more detailed usage.</p> <p>Tip</p> <p>To register the pre-commit hooks, use:</p> <pre><code>uv run pre-commit install\n</code></pre>"},{"location":"contributing/#running-tests","title":"Running tests","text":"<p>First ensure that the following cargo-managed binaries are installed:</p> <ul> <li><code>cargo-llvm-cov</code></li> <li><code>cargo-nextest</code></li> <li><code>llvm-cov-pretty</code> is used only for the optional <code>nox -s pretty-cov</code> task. Without this installed, <code>nox -s llvm-cov</code> will suffice.</li> </ul> <p>Use nox to run tests:</p> <pre><code>uv run nox -s test\n</code></pre> <p>Different test profiles are still defined in .config/nextest.toml. The above command uses the \"default\" profile, but to mimic the CI, use:</p> <pre><code>uv run nox -s test -- --profile ci\n</code></pre> <p>To generate a coverage report:</p> <pre><code>uv run nox -s llvm-cov -- --open\n</code></pre> <p>The <code>-- --open</code> part is optional. It opens the built coverage report in your default browser.</p> <p>The uploaded codecov report is generated with</p> <pre><code>uv run nox -s lcov\n</code></pre>"},{"location":"contributing/#generating-docs","title":"Generating docs","text":"<p>To view the docs locally, use</p> <pre><code>uv run nox -s docs -- --open\n</code></pre> <p>The <code>-- --open</code> part is optional. It opens the built docs in your default browser.</p> <p>In CI, docs are built using</p> <pre><code>uv run nox -s docs-build\n</code></pre>"},{"location":"node/","title":"Node.js Binding","text":"<p>The node.js binding for the cpp-linter-rs rust project (built using napi-rs and yarn).</p>"},{"location":"node/#install","title":"Install","text":"<p>Install with <code>npm</code>:</p> <pre><code>npm -g install @cpp-linter/cpp-linter\n</code></pre>"},{"location":"node/#usage","title":"Usage","text":"<p>For usage in a CI workflow, see the cpp-linter/cpp-linter-action repository.</p> <p>For the description of supported Command Line Interface options, see the CLI documentation.</p>"},{"location":"node/#development","title":"Development","text":"<p>After the native module is built using <code>yarn build:debug</code>, you can invoke the executable script as a normal CLI app:</p> <pre><code>npx cpp-linter --help\n</code></pre>"},{"location":"node/#scripts","title":"Scripts","text":"<p>If an available script is not described below, it should be considered a convenience tool for the CI/CD workflow.</p>"},{"location":"node/#yarn-build","title":"<code>yarn build</code>","text":"<p>This script builds the native module for distribution (with release profile optimizations).</p>"},{"location":"node/#yarn-builddebug","title":"<code>yarn build:debug</code>","text":"<p>Same as <code>yarn build</code> but does not use the release profile optimizations. You should use this script when testing locally.</p>"},{"location":"node/#yarn-test","title":"<code>yarn test</code>","text":"<p>This script runs a simple test to ensure the native module was built correctly.</p>"},{"location":"node/#folder-structure","title":"Folder structure","text":"Name Description <code>__test__</code> The location of the unit test(s). <code>npm</code> The required metadata for publishing platform-specific binary packages to npm. <code>src</code> The location for all rust sources related to binding the cpp-linter library. <code>build.rs</code> The cargo-specific build script used when compiling the binding. <code>Cargo.toml</code> Metadata about the binding's rust package (which is not intended to be published to crates.io). <code>package.json</code> Metadata about the npm package (platform agnostic - no binary). <code>cli.js</code> The executable script invoked as a Command Line Interface. <code>index.d.ts</code> The generated TypeScript typing and doc info that describes the exposed API in the built native module. <code>index.js</code> The generated script that delegates which native binary (platform-specific package or dev build) to import. <code>cpp-linter.x-y-z.node</code> The native module built for a specific platform (where <code>x-y-z</code> denotes the platform's name using the compilation target). <p>Hidden files and folders are not described in the table above. If they are not ignored by a gitignore specification, then they should be considered important only for maintenance or distribution.</p>"},{"location":"other-licenses/","title":"Third-party Licenses","text":"Dependency License anyhow v1.0.98 MIT OR Apache-2.0 chrono v0.4.41 MIT OR Apache-2.0 clap v4.5.41 MIT OR Apache-2.0 colored v3.0.0 MPL-2.0 fast-glob v0.4.5 MIT futures v0.3.31 MIT OR Apache-2.0 git2 v0.20.2 MIT OR Apache-2.0 lenient_semver v0.4.2 MIT OR Apache-2.0 log v0.4.27 MIT OR Apache-2.0 quick-xml v0.38.0 MIT regex v1.11.1 MIT OR Apache-2.0 reqwest v0.12.22 MIT OR Apache-2.0 semver v1.0.26 MIT OR Apache-2.0 serde v1.0.219 MIT OR Apache-2.0 serde_json v1.0.141 MIT OR Apache-2.0 tokio v1.46.1 MIT tokio-macros v2.5.0 (proc-macro) MIT tokio-stream v0.1.17 MIT which v8.0.0 MIT"},{"location":"other-licenses/#optional-dependencies","title":"Optional dependencies","text":"<p>The following are conditionally included in binaries (using the <code>openssl-vendored</code> feature on a case-by-case basis) because it is a dependency of git2:</p> Dependency License openssl Apache-2.0 openssl-probe MIT OR Apache-2.0"},{"location":"other-licenses/#bindings-dependencies","title":"Bindings' dependencies","text":""},{"location":"other-licenses/#python-binding","title":"Python binding","text":"Dependency License cpp-linter v2.0.0-rc12 MIT pyo3 v0.25.1 MIT OR Apache-2.0 tokio v1.46.1 MIT"},{"location":"other-licenses/#nodejs-binding","title":"Node.js binding","text":"Dependency License anyhow v1.0.98 MIT OR Apache-2.0 cpp-linter v2.0.0-rc12 MIT napi v3.1.1 MIT napi-derive v3.1.0 (proc-macro) MIT"},{"location":"permissions/","title":"Permissions","text":""},{"location":"permissions/#token-permissions","title":"Token Permissions","text":"<p>This is an exhaustive list of required permissions organized by features.</p> <p>Important</p> <p>The <code>GITHUB_TOKEN</code> environment variable should be supplied when running on a private repository. Otherwise the runner does not not have the privileges needed for the features mentioned here.</p> <p>See also Authenticating with the <code>GITHUB_TOKEN</code></p>"},{"location":"permissions/#file-changes","title":"File Changes","text":"<p>When using <code>--files-changed-only</code> or <code>--lines-changed-only</code> to get the list of file changes for a CI event, the following permissions are needed:</p>"},{"location":"permissions/#push","title":"Push","text":"<p>For <code>push</code> events.</p> <pre><code>    permissions:\n        contents: read\n</code></pre> <p>The <code>contents</code> permission is also needed to download files if the repository is not checked out before running cpp-linter.</p>"},{"location":"permissions/#pull-request","title":"Pull Request","text":"<p>For <code>pull_request</code> events.</p> <pre><code>    permissions:\n        contents: read\n        pull-requests: read\n</code></pre> <p>For pull requests, the <code>contents</code> permission is only needed to download files if the repository is not checked out before running cpp-linter.</p> <ul> <li>Specifying <code>write</code> to the <code>pull-requests</code> permission is also sufficient as that is   required for</li> <li>posting thread comments on pull requests</li> <li>posting pull request reviews</li> </ul>"},{"location":"permissions/#thread-comments","title":"Thread Comments","text":"<p>The <code>--thread-comments</code> feature requires the following permissions:</p>"},{"location":"permissions/#push_1","title":"Push","text":"<p>For <code>push</code> events.</p> <pre><code>    permissions:\n      metadata: read\n      contents: write\n</code></pre> <ul> <li>The <code>metadata</code> permission is needed to fetch existing comments.</li> <li>The <code>contents</code> permission is needed to post or update a commit comment.   This also allows us to delete an outdated comment if needed.</li> </ul>"},{"location":"permissions/#pull-request_1","title":"Pull Request","text":"<p>For <code>pull_request</code> events.</p> <pre><code>    permissions:\n      pull-requests: write\n</code></pre>"},{"location":"permissions/#pull-request-reviews","title":"Pull Request Reviews","text":"<p>The <code>tidy-review</code>, <code>format-review</code>, and <code>passive-reviews</code> features require the following permissions:</p> <pre><code>    permissions:\n      pull-requests: write\n</code></pre>"},{"location":"pr-review-caveats/","title":"Pull Request Review Caveats","text":"<p>Note</p> <p>This information is specific to GitHub Pull Requests (often abbreviated as \"PR\").</p> <p>While the Pull Request review feature has been diligently tested, there are still some caveats to beware of when using Pull Request reviews.</p>"},{"location":"pr-review-caveats/#bot-permissions-required","title":"Bot Permissions required","text":"<p>The \"GitHub Actions\" bot may need to be allowed to approve Pull Requests. By default, the bot cannot approve Pull Request changes, only request more changes. This will show as a warning in the workflow logs if the given token (set to the environment variable <code>GITHUB_TOKEN</code>) isn't configured with the proper permissions.</p> <p>Important</p> <p>Refer to the GitHub documentation for repository settings or organization settings about adjusting the required permissions for GitHub Actions's <code>secrets.GITHUB_TOKEN</code>.</p> <p>See our documented permissions.</p>"},{"location":"pr-review-caveats/#auto-disabled-for-certain-event-types","title":"Auto-disabled for certain event types","text":"<p>The feature is auto-disabled for</p> <ul> <li>closed Pull Requests</li> <li>Pull Requests marked as \"draft\"</li> <li>push events</li> </ul>"},{"location":"pr-review-caveats/#posts-a-new-review-on-each-run","title":"Posts a new review on each run","text":"<p>Clang-tidy and clang-format suggestions are shown in 1 Pull Request review.</p> <ul> <li>Users are encouraged to choose either <code>tidy-review</code> or <code>format-review</code>.   Enabling both will likely show duplicate or similar suggestions.   Remember, clang-tidy can be configured to use the same <code>style</code> that clang-format accepts.</li> <li>Each generated review is specific to the commit that triggered the Continuous Integration   workflow.</li> <li>Outdated reviews are dismissed but not marked as resolved.   Also, the outdated review's summary comment is not automatically hidden.   To reduce the Pull Request's thread noise, users interaction is required.</li> </ul> <p>Important</p> <p>Refer to GitHub's documentation about hiding a comment. Hiding a Pull Request review's summary comment will not resolve the suggestions in the diff. Please also refer to resolve a conversation to collapse outdated or duplicate suggestions in the diff.</p> <p>GitHub REST API does not provide a way to hide comments or mark review suggestions as resolved.</p> <p>Tip</p> <p>We do support an environment variable named <code>CPP_LINTER_PR_REVIEW_SUMMARY_ONLY</code>. If the variable is set to <code>true</code>, then the review only contains a summary comment with no suggestions posted in the diff.</p>"},{"location":"pr-review-caveats/#probable-non-exhaustive-reviews","title":"Probable non-exhaustive reviews","text":"<p>If any suggestions did not fit within the Pull Request diff, then the review's summary comment will indicate how many suggestions were left out. The full patch of suggestions is always included as a collapsed code block in the review summary comment. This isn't a problem we can fix. GitHub won't allow review comments/suggestions to target lines that are not shown in the Pull Request diff (the summation of file differences in a Pull Request).</p> <ul> <li>Users are encouraged to set <code>lines-changed-only</code> to <code>true</code>.   This will help us keep the suggestions limited to lines that are shown within the Pull   Request diff.   However, there are still some cases where clang-format or clang-tidy will apply fixes to lines   that are not within the diff.   This can't be avoided because the <code>--line-filter</code> passed to the clang-tidy (and <code>--lines</code>   passed to clang-format) only applies to analysis, not fixes.</li> <li>Not every diagnostic from clang-tidy can be automatically fixed.   Some diagnostics require user interaction/decision to properly address.   If any diagnostic reported by clang-tidy falls within the Pull Request's diff,   then it will be noted in the Pull Request review comments (without a suggested fix).</li> <li>Some fixes provided might depend on what compiler is used.   We have made it so clang-tidy takes advantage of any fixes provided by the compiler.   Compilation errors may still prevent clang-tidy from reporting all concerns.</li> </ul>"},{"location":"python/","title":"Python Binding","text":"<p>The python binding for the cpp-linter-rs rust project (built using pyo3 and maturin).</p>"},{"location":"python/#install","title":"Install","text":"<p>Install with <code>pip</code>:</p> <pre><code>pip install cpp-linter\n</code></pre> <p>Pre-releases are uploaded to test-pypi:</p> <pre><code>pip install -i https://test.pypi.org/simple/ cpp-linter\n</code></pre>"},{"location":"python/#usage","title":"Usage","text":"<p>For usage in a CI workflow, see the cpp-linter/cpp-linter-action repository.</p> <p>For the description of supported Command Line Interface options, see the CLI documentation.</p>"},{"location":"python/#development","title":"Development","text":"<p>Build the binding with maturin (from repository root folder):</p> <pre><code>maturin dev\n</code></pre> <p>Then invoke the executable script as a normal CLI app:</p> <pre><code>cpp-linter -help\n</code></pre>"},{"location":"python/#folder-structure","title":"Folder structure","text":"Name Description <code>src</code> The location for all rust sources related to binding the cpp-linter library. <code>Cargo.toml</code> Metadata about the binding's rust package (which is not intended to be published to crates.io). <code>../../cpp_linter.pyi</code> The typing stubs for the package (located in repo root). <code>../../pyproject.toml</code> Metadata about the python package (located in repo root). <p>Hidden files and folders are not described in the table above. If they are not ignored by a gitignore specification, then they should be considered important only for maintenance or distribution.</p>"}]}